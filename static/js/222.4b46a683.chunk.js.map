{"version":3,"file":"static/js/222.4b46a683.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getFilterValue = state => state.filter;\nexport const selectLoading = state => state.contacts.loading;\nexport const getFilteredContacts = ({ contacts: { items }, filter }) => {\n  if (!filter) {\n    return items;\n  }\n  const toLowercaseFilter = filter.toLowerCase();\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(toLowercaseFilter)\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\"};","import Notiflix from 'notiflix';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContactThunk } from '../../redux/contacts/contactsThunk';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { useState } from 'react';\n\nimport css from './ContactForm.module.css';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.warn(`Тип поля - ${name} не обробляється!`);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      contacts.some(\n        contact =>\n          contact.name.toLowerCase() === name.toLowerCase() ||\n          contact.number === number\n      )\n    ) {\n      Notiflix.Notify.info(`${name} or ${number} is already in contacts!`);\n      return;\n    }\n\n    dispatch(addContactThunk({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <lable>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleInputChange}\n          value={name}\n          placeholder=\"Input name ...\"\n          required\n        />\n      </lable>\n      <lable>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleInputChange}\n          value={number}\n          placeholder=\"Input number ...\"\n          required\n        />\n      </lable>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts__list\":\"ContactList_contacts__list__hSN0M\",\"contacts__item\":\"ContactList_contacts__item__9ozWV\",\"contacts__btn\":\"ContactList_contacts__btn__I3XUZ\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContactThunk } from '../../redux/contacts/contactsThunk';\nimport { getFilteredContacts } from '../../redux/contacts/selectors';\nimport css from './ContactList.module.css';\n\nexport function ContactList() {\n  const dispatch = useDispatch();\n\n  const visibleContacts = useSelector(getFilteredContacts);\n  return (\n    <ul className={css.contacts__list}>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li className={css.contacts__item} key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            className={css.contacts__btn}\n            onClick={() => dispatch(deleteContactThunk(id))}\n          >\n            Del\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filter__text\":\"Filter_filter__text__aAasw\",\"filter__input\":\"Filter_filter__input__toa89\"};","import { useSelector, useDispatch } from 'react-redux';\nimport css from './Filter.module.css';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { getFilterValue } from '../../redux/contacts/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { value } = event.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <label className={css.filter__text}>\n        Find contacts by name\n        <input\n          className={css.filter__input}\n          type=\"text\"\n          placeholder=\"Type name ...\"\n          value={filter}\n          onChange={handleChange}\n        ></input>\n      </label>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { getContactsThunk } from '../redux/contacts/contactsThunk';\nimport { selectLoading } from '../redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getFilterValue","filter","selectLoading","loading","getFilteredContacts","toLowercaseFilter","toLowerCase","contact","name","includes","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleInputChange","event","target","value","console","warn","className","css","onSubmit","preventDefault","some","Notiflix","addContactThunk","type","pattern","title","onChange","placeholder","required","ContactList","visibleContacts","map","id","onClick","deleteContactThunk","Filter","setFilter","Contacts","isLoading","useEffect","getContactsThunk","Helmet"],"sourceRoot":""}